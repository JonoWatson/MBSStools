% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metric.values.R
\name{metric.values}
\alias{metric.values}
\title{Calculate metric values}
\usage{
metric.values(fun.DF, fun.SampID, fun.Community, fun.MetricNames = NULL,
  boo.Adjust = FALSE)
}
\arguments{
\item{fun.DF}{Data frame of taxa (list required fields)}

\item{fun.SampID}{Sample ID column name}

\item{fun.Community}{Community name for which to calculate metric values (bugs, fish, or algae)}

\item{fun.MetricNames}{Optional vector of metric names to be returned.  If none are supplied then all will be returned.}

\item{boo.Adjust}{Optional boolean value on whether to perform adjustments of values prior to scoring.  Default = FALSE but will always be TRUE for fish metrics.}
}
\value{
data frame of SampleID and metric values
}
\description{
This function calculates metric values for bugs, fish, and algae.
Inputs are a data frame of taxa, SampleID, and community.
NonUnique = taxa to be excluded from taxa metrics (i.e., ambiguous taxa in the sample)
Benthic Macroinvertebrates
Required fields: SampleID (provided by user), Count, NonUnique, FinalID, Order, Family, Tribe, Genus, FFG, TolVal, Habit, Voltinism, BCG_Atr
FFG = CF, CG, SC, SH, PR
Habit = BU, CB, CN, SP, SW
Voltinism = multivoltine, semivoltine, univoltine
Fish
Required fields: SampleID (provided by user), Count, NonUnique, FinalID, Genus, Trophic, Lithophil, StWidAvg, StLength, MassTotal
Trophic =
Lithophil =
Stratum =
Tolerance =
Metric names have a prefix and suffix.  The prefix follows the naming convention listed below.  The suffix is a short name of the group being measured.  Only phylogenetic names are first letter caps.
ni = number of individuals
nt = number of taxa
pi = percent of individuals
pt = percent of taxa
x = index
}
\examples{
# Index, Benthic Macroinvertebrates, genus
myIndex <- "MBSS.2005.Bugs"
# Thresholds
thresh <- metrics_scoring
# get metric names for myIndex
(myMetrics.Bugs <- as.character(droplevels(unique(thresh[thresh[,"Index.Name"]==myIndex,"Metric"]))))
# Taxa Data
myDF.Bugs <- taxa_bugs_genus
myMetric.Values.Bugs <- metric.values(myDF.Bugs, "SampleID", "bugs", myMetrics.Bugs)
View(myMetric.Values.Bugs)

# Index, Benthic Macroinvertebrates, family
myIndex <- "MSW.1999.Bugs"
# Thresholds
thresh <- metrics_scoring
# get metric names for myIndex
(myMetrics.Bugs <- as.character(droplevels(unique(thresh[thresh[,"Index.Name"]==myIndex,"Metric"]))))
# Taxa Data
myDF.Bugs <- taxa_bugs_family
myMetric.Values.Bugs <- metric.values(myDF.Bugs, "SampleID", "bugs", myMetrics.Bugs)
View(myMetric.Values.Bugs)

# Index, Fish
myIndex <- "MBSS.2005.Fish"
# Thresholds
thresh <- metrics_scoring
# get metric names for myIndex
(myMetrics.Fish <- as.character(droplevels(unique(thresh[thresh[,"Index.Name"]==myIndex,"Metric"]))))
# Taxa Data
myDF.Fish <- taxa_fish
myMetric.Values.Fish <- metric.values(myDF.Fish, "SampleID", "fish", myMetrics.Fish, TRUE)
View(myMetric.Values.Fish)
}
